# serverless.yml
service: nshm-kororaa-api
 
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-southeast-2

plugins:
  - serverless-offline
  - serverless-plugin-warmup
  - serverless-domain-manager

custom:
  # DRY constants: define all compound/generated names in one place
  # Override args are: .. defaults:
  # --app_acroym          signed-uploader
  # --s3_bucket           self:custom.app_acronym
  # --s3_key_base         self:custom.stage
  # --region              us-east-1
  # --stage               test
  # --deletion_policy     delete

  app_acronym: ${opt:acronym, self:service}
  default_stage: dev
  stage: ${opt:stage, self:custom.default_stage}
  stack_name: ${self:custom.app_acronym}-${self:custom.stage}
  region: ${opt:region, self:provider.region}
  deletion_policy: Delete

  serverless-offline:
    httpPort: 4100

  # serverless-domain-manager settings
  domains:
    prod: nshm-api.gns.cri.nz
    test: nshm-api-test.gns.cri.nz
    dev: nshm-api-dev.gns.cri.nz

  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: 'k-api' # This will be prefixed to all routes
    stage: ${self:custom.stage}
    createRoute53Record: false

  # apiGateway:
  #   apiKeys:
  #     - name: KORORAA_APP_API_TempApiKey-${self:custom.stage}
  #       description: Api key until we have an auth function # Optional

  # Lambda warmer settings see https://www.serverless.com/plugins/serverless-plugin-warmup
  warmup:
    littleWarmer:
      enabled: true
      events:
        - schedule: rate(5 minutes)
      concurrency: 1

functions:
  app:
    description: The graphql API of ${self:service} in ${self:custom.stage}
    handler: server.handler
    memorySize: 2096 # optional, in MB, default is 1024
    timeout: 20 # optional, in seconds, default is 6
    events:
      - http:
          path: "/graphql"
          method: OPTIONS
      - http:
          path: "/graphql"
          method: POST
          # private: true
      - http:
          path: "/graphql"
          method: GET
          # private: true
    environment:
      SERVICE_NAME: ${self:service}
      STACK_NAME: ${self:custom.stack_name}
      REGION: ${self:custom.region}
      DEPLOYMENT_STAGE: ${self:custom.stage}
      ENABLE_METRICS: ${env:ENABLE_METRICS, 0}
      NZSHM22_KORORAA_API_URL: ${env:NZSHM22_KORORAA_API_URL}
      NZSHM22_KORORAA_API_KEY: ${env:NZSHM22_KORORAA_API_KEY}
      NZSHM22_TOSHI_API_URL: ${env:NZSHM22_TOSHI_API_URL}
      NZSHM_TOSHI_GRAPHQL_API_KEY: ${env:NZSHM22_TOSHI_API_KEY}